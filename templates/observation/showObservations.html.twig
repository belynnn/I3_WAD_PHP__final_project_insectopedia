{% extends 'base.html.twig' %}

{% block title %}Observations{% endblock %}

{% block body %}
    {{ encore_entry_link_tags('observation_css') }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
        crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin="">
    </script>

    <h2 class="bg-gradient-green mb-3 px-4 pb-2 pt-2 text-white">Observations</h2>

    <div class="mb-3 container">
        <button type="button" class="btn btn-success" id="mapToggle">Carte</button>
        <button type="button" class="btn btn-success" id="gridToggle">Grille</button>
        <button type="button" class="btn btn-success" id="listToggle">Liste</button>
    </div>

    {# MAP #}
    <div class="mt-2 container" id="mapContainer">
        <div id="map"></div>
    </div>

    {# GRILLE #}
    <div id="gridContainer" class="hidden">
        <div class="container text-center">
            <div class="row row-cols-3">
                {% for observation in observations %}
                    <div class="col">
                        <a class="text-decoration-none text-success" href="{{ path('app_observation', {id: observation.id}) }}">
                            <div class="card" style="width: 18rem;">
                            {% if observation.photo is not null and observation.photo != 'null' %}
                                <img class="card-img-top" src="../uploads/photos/{{ observation.photo }}" alt="{{ observation.nameInsect }}" width="250px" height="200px">
                            {% else %}
                                <img class="card-img-top" src="https://answers-afd.microsoft.com/static/images/image-not-found.jpg" alt="Image not found" width="250px">
                            {% endif %}
                            <div class="card-body">
                                <h5 class="card-title">{{ observation.nameInsect }}</h5>
                                <p class="card-text">{{ observation.description | split(' ')[:10] | join(' ') }}...</p>
                                <a href="{{ path('app_observation', {id: observation.id}) }}" class="btn btn-success mt-3">Voir plus d'infos</a>
                            </div>
                        </div>
                        </a>
                    </div>
                {% else %}
                    <p>Aucune observation trouvée.</p>
                {% endfor %}
            </div>
        </div>
    </div>


    {# LISTE #}
    <div id="listContainer" class="hidden">
        <div class="container">
            {% if observations is not empty %}
                <table class="table">
                    <thead>
                        <tr>
                            <th>Photo</th>
                            <th>Nom de l'insecte</th>
                            <th>Description</th>
                            <th>Longitude</th>
                            <th>Latitude</th>
                            <th>Pseudo</th>
                            <th>Date d'observation</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for observation in observations %}
                            <tr>
                                <td>
                                    {% if observation.photo is not null and observation.photo != 'null' %}
                                        <img src="../uploads/photos/{{ observation.photo }}" width="64px" height="64px" />
                                    {% else %}
                                        <img src="https://answers-afd.microsoft.com/static/images/image-not-found.jpg" width="64px" height="64px" />
                                    {% endif %}
                                </td>
                                <td>
                                    <a class="text-success" href="{{ path('app_observation', {id: observation.id}) }}">{{ observation.nameInsect }}</a>
                                </td>
                                <td>{{ observation.description | split(' ')[:10] | join(' ') }}...</td>
                                <td>{{ observation.longitude }}</td>
                                <td>{{ observation.latitude }}</td>
                                <td>{{ observation.createdBy.pseudo }}</td>
                                <td>{{ observation.dateObservation|date('d/m/Y') }}</td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% else %}
                <p>Aucune observation trouvée.</p>
            {% endif %}
        </div>
    </div>

    {# JS #}
    <script>
        var myIcon = L.icon({
            iconUrl: 'https://cdn3.iconfinder.com/data/icons/elasto-map-markers/26/00-MAP_map-marker-16-512.png',
            iconSize: [32, 32],
            popupAnchor: [-3, -76],
        });
        var map = L.map('map').setView([50.499527, 4.475403], 8);

        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        // Ajout des marqueurs dynamiquement
        {% for observation in observations %}
            {% if observation.latitude is not null and observation.longitude is not null %}
                var marker = L.marker([{{ observation.latitude }}, {{ observation.longitude }}], {icon: myIcon}).addTo(map);
                marker.bindTooltip("{{ observation.nameInsect }}<br>{{ observation.dateObservation|date('d/m/Y') }}");
                
                // Ajouter l'événement click pour rediriger vers la page de l'observation
                marker.on('click', function() {
                    window.location.href = "{{ path('app_observation', {id: observation.id}) }}";
                });
            {% endif %}
        {% endfor %}

        // Gestion de l'affichage carte/liste
        document.addEventListener('DOMContentLoaded', function () {
            const mapContainer = document.getElementById('mapContainer');
            const gridContainer = document.getElementById('gridContainer');
            const listContainer = document.getElementById('listContainer');
            const mapToggle = document.getElementById('mapToggle');
            const gridToggle = document.getElementById('gridToggle');
            const listToggle = document.getElementById('listToggle');

            // Afficher la carte par défaut
            mapContainer.classList.remove('hidden');
            listContainer.classList.add('hidden');
            gridContainer.classList.add('hidden');
            map.invalidateSize(); // Redimensionne la carte Leaflet

            mapToggle.addEventListener('click', () => {
                mapContainer.classList.remove('hidden');
                listContainer.classList.add('hidden');
                gridContainer.classList.add('hidden');
                map.invalidateSize(); // Redimensionne la carte Leaflet lorsqu'elle est affichée
            });

            listToggle.addEventListener('click', () => {
                mapContainer.classList.add('hidden');
                listContainer.classList.remove('hidden');
                gridContainer.classList.add('hidden');
            });

            gridToggle.addEventListener('click', () => {
                mapContainer.classList.add('hidden');
                listContainer.classList.add('hidden');
                gridContainer.classList.remove('hidden');
            });
        });
    </script>
{% endblock %}